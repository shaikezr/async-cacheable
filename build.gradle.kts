/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    id("org.springframework.boot") version ("2.7.9")
    id("io.freefair.lombok") version ("6.5.1")
    id("com.github.ben-manes.versions") version ("0.46.0") 
    id("com.github.mrsarm.jshell.plugin") version ("1.2.1")
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.8.2")
    implementation("com.github.ben-manes.caffeine:caffeine:3.1.5")
    implementation("org.springframework.boot:spring-boot-starter-webflux:3.0.5")
    implementation("org.springframework.boot:spring-boot-starter-aop:3.0.5")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api("org.apache.commons:commons-math3:3.6.1")

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("com.google.guava:guava:31.0.1-jre")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
